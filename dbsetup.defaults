//
// MongoDB initialization
//
////////////////////////////////////////////////
// The following variables should be set by you
////////////////////////////////////////////////
var serviceAccount = ''; // same as application environment variable MONGODB_SERVICE_USER
var serviceSecret = '';  // same as application environment variable MONGODB_SERVICE_SECRET
var guestAccount = '';   // same as application environment variable MONGODB_GUEST_USER
var guestSecret = '';    // same as application environment variable MONGODB_GUEST_SECRET
var dbname = 'ireceptor';
var collectionName = "sequence";

// No need to change anything below this comment line!
var conn = new Mongo();
var db = conn.getDB("admin");

// Create service account
db.createUser({ user: serviceAccount, pwd: serviceSecret, roles: [{ role: "userAdminAnyDatabase", db: "admin" }] });
db.grantRolesToUser(serviceAccount, [{ "role": "userAdmin", "db": dbname }]);
db.grantRolesToUser(serviceAccount, [{ "role": "readWrite", "db": dbname }]);

// Create guest account
db.createUser({ user: guestAccount, pwd: guestSecret, roles: [{ role: "read", db: dbname }] });

// Create a user-define role with the permission needed for to add query plans
var role_queryplan = "queryPlan";
db.createRole({ role: role_queryplan, privileges: [{ resource: { db: dbname, collection: "" }, actions: ["planCacheIndexFilter"] }], roles: [] });
db.grantRolesToUser(serviceAccount, [role_queryplan]);

// Create query plans
db = conn.getDB(dbname);
db.createCollection(collectionName);
addQueryPlans(db, collectionName);
addIndexes(db, collectionName);

// add query plans to db.collectionName
function addQueryPlans(db, collectionName) {
    db.runCommand(
        {
            planCacheSetFilter: collectionName,
            query: { "ir_project_sample_id": 4 },
            indexes: [
                { "ir_project_sample_id": 1 }
            ]
        }
    );
    
    db.runCommand(
        {
            planCacheSetFilter: collectionName,
            query: { "ir_project_sample_id": 4, "v_call": { "$gte": "TRBV20-1*01", "$lt": "TRBV20-1*02" } },
            indexes: [
                { ir_project_sample_id: 1, v_call: 1 },
                { v_call: 1, ir_project_sample_id: 1 }
            ]
        }
    );
    
    db.runCommand(
        {
            planCacheSetFilter: collectionName,
            query: { "ir_project_sample_id": 4, "v_call": { "$gte": "TRBV20-1*01", "$lt": "TRBV20-1*02" } },
            indexes: [
                {
                    "ir_project_sample_id": 1,
                    "v_call": 1
                }
            ]
        }
    );
    
    db.runCommand(
        {
            planCacheSetFilter: collectionName,
            query: { "ir_project_sample_id": 4, "d_call": { "$gte": "TRBD2*01", "$lt": "TRBD2*02" } },
            indexes: [
                { ir_project_sample_id: 1, d_call: 1 }
            ]
        }
    );
    
    db.runCommand(
        {
            planCacheSetFilter: collectionName,
            query: { "ir_project_sample_id": 4, "j_call": { "$gte": "TRBJ2-01*01", "$lt": "TRBJ2-01*02" } },
            indexes: [
                { ir_project_sample_id: 1, j_call: 1 }
            ]
        }
    );
    
    
    db.runCommand(
        {
            planCacheSetFilter: collectionName,
            query: { "ir_project_sample_id": 4, "v_call": { "$gte": "TRBV20-1*01", "$lt": "TRBV20-1*02" } },
            indexes: [
                { ir_project_sample_id: 1, v_call: 1 }
            ]
        }
    );
    
    db.runCommand(
        {
            planCacheSetFilter: collectionName,
            query: { "ir_project_sample_id": 4, "v_call": { "$regex": "^TRBV20-1\\*01" } },
            indexes: [
                { ir_project_sample_id: 1, v_call: 1 }
            ]
        }
    );
    
    db.runCommand(
        {
            planCacheSetFilter: collectionName,
            query: { "ir_project_sample_id": 4, "d_call": { "$regex": "^TRBD2\\*02" } },
            indexes: [
                { ir_project_sample_id: 1, d_call: 1 }
            ]
        }
    );
    
    db.runCommand(
        {
            planCacheSetFilter: collectionName,
            query: { "ir_project_sample_id": 4, "j_call": { "$regex": "^TRBJ2-01\\*1" } },
            indexes: [
                { ir_project_sample_id: 1, j_call: 1 }
            ]
        }
    );
    
    db.runCommand(
        {
            planCacheSetFilter: collectionName,
            query: { "ir_project_sample_id": 4, "junction_aa_length": 8 },
            indexes: [
                { ir_project_sample_id: 1, junction_aa_length: 1 }
            ]
        }
    );
    
    db.runCommand(
        {
            planCacheSetFilter: collectionName,
            query: { "ir_project_sample_id": 4, "substring": "CASSQVGTGVY" },
            indexes: [
                { substring: 1, ir_project_sample_id: 1 }
            ]
        }
    );
    
    db.runCommand(
        {
            planCacheSetFilter: collectionName,
            query: { "ir_project_sample_id": 4, "vgene_gene": "TRBV20-1" },
            indexes: [
                { ir_project_sample_id: 1, vgene_gene: 1 }
            ]
        }
    );
    
    db.runCommand(
        {
            planCacheSetFilter: collectionName,
            query: { "ir_project_sample_id": 4, "vgene_family": "TRBV20" },
            indexes: [
                { ir_project_sample_id: 1, vgene_family: 1 }
            ]
        }
    );
    
    db.runCommand(
        {
            planCacheSetFilter: collectionName,
            query: { "ir_project_sample_id": 4, "v_call": "TRBV20-1*01" },
            indexes: [
                { ir_project_sample_id: 1, v_call: 1 }
            ]
        }
    );
    
    db.runCommand(
        {
            planCacheSetFilter: collectionName,
            query: { "ir_project_sample_id": 4, "jgene_gene": "TRBJ2-01" },
            indexes: [
                { ir_project_sample_id: 1, jgene_gene: 1 }
            ]
        }
    );
    
    db.runCommand(
        {
            planCacheSetFilter: collectionName,
            query: { "ir_project_sample_id": 4, "jgene_family": "TRBJ2" },
            indexes: [
                { ir_project_sample_id: 1, jgene_family: 1 }
            ]
        }
    );
    
    db.runCommand(
        {
            planCacheSetFilter: collectionName,
            query: { "ir_project_sample_id": 4, "j_call": "TRBJ2-1*01" },
            indexes: [
                { ir_project_sample_id: 1, j_call: 1 }
            ]
        }
    );
    
    db.runCommand(
        {
            planCacheSetFilter: collectionName,
            query: { "ir_project_sample_id": 4, "dgene_gene": "TRBD2-01" },
            indexes: [
                { ir_project_sample_id: 1, dgene_gene: 1 }
            ]
        }
    );
    
    db.runCommand(
        {
            planCacheSetFilter: collectionName,
            query: { "ir_project_sample_id": 4, "dgene_family": "TRBD2" },
            indexes: [
                { ir_project_sample_id: 1, dgene_family: 1 }
            ]
        }
    );
    
    db.runCommand(
        {
            planCacheSetFilter: collectionName,
            query: { "ir_project_sample_id": 4, "d_call": "TRBD2-1*01" },
            indexes: [
                { ir_project_sample_id: 1, d_call: 1 }
            ]
        }
    );
    
    db.runCommand(
        {
            planCacheSetFilter: collectionName,
            query: { "ir_project_sample_id": 4, "functional": 1 },
            indexes: [
                { ir_project_sample_id: 1, functional: 1 }
            ]
        }
    );
    
    db.runCommand(
        {
            planCacheSetFilter: collectionName,
            query: { "ir_project_sample_id": 4, "annotation_tool": 1 },
            indexes: [
                { ir_project_sample_id: 1, annotation_tool: 1 }
            ]
        }
    );
    
    db.runCommand(
        {
            planCacheSetFilter: collectionName,
            query: { "ir_project_sample_id": 4, "annotation_tool": "MiXCR" },
            indexes: [
                { ir_project_sample_id: 1, annotation_tool: 1 }
            ]   
        }
    );
}

// add the standard set of ireceptor indexes to db.collectionName
function addIndexes(db, collectionName) {
    indexes = [{
        ir_project_sample_id: 1
    }, {
        ir_project_sample_id: 1,
        v_call: 1
    }, {
        ir_project_sample_id: 1,
        j_call: 1
    }, {
        ir_project_sample_id: 1,
        d_call: 1
    }, {
        ir_project_sample_id: 1,
        junction_aa_length: 1
    }, {
        annotation_tool: 1
    }, {
        ir_project_sample_id: 1,
        vgene_family: 1
    }, {
        ir_project_sample_id: 1,
        vgene_gene: 1
    }, {
        ir_project_sample_id: 1,
        jgene_gene: 1
    }, {
        ir_project_sample_id: 1,
        jgene_family: 1
    }, {
        ir_project_sample_id: 1,
        dgene_gene: 1
    }, {
        ir_project_sample_id: 1,
        dgene_family: 1
    }, {
        ir_project_sample_id: 1,
        functional: 1
    }, {
        ir_project_sample_id: 1,
        annotation_tool: 1
    }, {
        substring: 1,
        ir_project_sample_id: 1
    }];

    indexes.forEach((index) => {
        db[collectionName].createIndex(index);
    });
}
